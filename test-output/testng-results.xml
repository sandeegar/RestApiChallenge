<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="4" total="91" passed="87">
  <reporter-output>
  </reporter-output>
  <suite name="Rest-API-Testing" duration-ms="2666" started-at="2019-01-10T03:19:23Z" finished-at="2019-01-10T03:19:26Z">
    <groups>
    </groups>
    <test name="Regression-Suite" duration-ms="2666" started-at="2019-01-10T03:19:23Z" finished-at="2019-01-10T03:19:26Z">
      <class name="com.rest.api.FetchOrderApi">
        <test-method status="PASS" signature="test_01_verify_retrieve_valid_order_with_id()[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_01_verify_retrieve_valid_order_with_id" duration-ms="1" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_retrieve_valid_order_with_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="24" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="16" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="19" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="19" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="15" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="15" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="14" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="14" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="15" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="17" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="16" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="15" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.FetchOrderApi@467aecef]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="15" started-at="2019-01-10T03:19:25Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
      </class> <!-- com.rest.api.FetchOrderApi -->
      <class name="com.rest.api.CompleteOrderPutApi">
        <test-method status="PASS" signature="test_01_verify_complete_an_ongoing_order_with_specific_order_id()[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_01_verify_complete_an_ongoing_order_with_specific_order_id" duration-ms="1" started-at="2019-01-10T03:19:26Z" finished-at="2019-01-10T03:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_complete_an_ongoing_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="1" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="1" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="0" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="1" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="2" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="2" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="1" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="4" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="2" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="3" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="1" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="1" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="10" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="0" started-at="2019-01-10T03:19:26Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/completed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_04_verify_order_not_completed_without_placing_it()[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_04_verify_order_not_completed_without_placing_it" duration-ms="22" started-at="2019-01-10T03:19:26Z" finished-at="2019-01-10T03:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_completed_without_placing_it -->
        <test-method status="PASS" signature="test_05_verify_order_not_completed_for_an_already_completed_order_with_specific_order_id()[pri:0, instance:com.rest.api.CompleteOrderPutApi@7e2d773b]" name="test_05_verify_order_not_completed_for_an_already_completed_order_with_specific_order_id" duration-ms="1" started-at="2019-01-10T03:19:26Z" finished-at="2019-01-10T03:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_completed_for_an_already_completed_order_with_specific_order_id -->
      </class> <!-- com.rest.api.CompleteOrderPutApi -->
      <class name="com.rest.api.CancelOrderPutApi">
        <test-method status="PASS" signature="test_01_verify_cancel_an_assigned_order_with_specific_order_id()[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_01_verify_cancel_an_assigned_order_with_specific_order_id" duration-ms="1" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_cancel_an_assigned_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_02_verify_cancel_an_ongoing_order_with_specific_order_id()[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_02_verify_cancel_an_ongoing_order_with_specific_order_id" duration-ms="0" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_cancel_an_ongoing_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_cancelled_for_an_already_completed_order_with_specific_order_id()[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_03_verify_order_not_cancelled_for_an_already_completed_order_with_specific_order_id" duration-ms="0" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_cancelled_for_an_already_completed_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id()[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id" duration-ms="0" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="21" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="19" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="26" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="13" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="15" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="14" started-at="2019-01-10T03:19:25Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="14" started-at="2019-01-10T03:19:25Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="16" started-at="2019-01-10T03:19:25Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="16" started-at="2019-01-10T03:19:25Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="14" started-at="2019-01-10T03:19:25Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="19" started-at="2019-01-10T03:19:26Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="15" started-at="2019-01-10T03:19:26Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="16" started-at="2019-01-10T03:19:26Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="27" started-at="2019-01-10T03:19:26Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/cancelled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_07_verify_order_not_cancelled_without_placing_it()[pri:0, instance:com.rest.api.CancelOrderPutApi@4d50efb8]" name="test_07_verify_order_not_cancelled_without_placing_it" duration-ms="15" started-at="2019-01-10T03:19:26Z" finished-at="2019-01-10T03:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_07_verify_order_not_cancelled_without_placing_it -->
      </class> <!-- com.rest.api.CancelOrderPutApi -->
      <class name="com.rest.api.PlaceOrderApi">
        <test-method status="PASS" signature="initialize()[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="initialize" is-config="true" duration-ms="460" started-at="2019-01-10T03:19:23Z" finished-at="2019-01-10T03:19:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="test_01_verify_placing_an_order()[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_01_verify_placing_an_order" duration-ms="63" started-at="2019-01-10T03:19:23Z" finished-at="2019-01-10T03:19:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_placing_an_order -->
        <test-method status="PASS" signature="test_02_verify_placing_an_order_at_specific_time()[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_02_verify_placing_an_order_at_specific_time" duration-ms="98" started-at="2019-01-10T03:19:23Z" finished-at="2019-01-10T03:19:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_placing_an_order_at_specific_time -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="1266" started-at="2019-01-10T03:19:23Z" data-provider="invalidTimeFormats" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="34" started-at="2019-01-10T03:19:25Z" data-provider="invalidTimeFormats" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="20" started-at="2019-01-10T03:19:25Z" data-provider="invalidTimeFormats" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="21" started-at="2019-01-10T03:19:25Z" data-provider="invalidTimeFormats" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="20" started-at="2019-01-10T03:19:25Z" data-provider="invalidTimeFormats" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="25" started-at="2019-01-10T03:19:25Z" data-provider="invalidTimeFormats" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop" duration-ms="18" started-at="2019-01-10T03:19:25Z" data-provider="invalidLattitude" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_placed_with_incorrect_location_of_one_stop -->
        <test-method status="PASS" signature="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop" duration-ms="20" started-at="2019-01-10T03:19:25Z" data-provider="invalidLattitude" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_placed_with_incorrect_location_of_one_stop -->
        <test-method status="PASS" signature="test_05_verify_order_not_placed_with_incorrect_locations_of_stops(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_05_verify_order_not_placed_with_incorrect_locations_of_stops" duration-ms="18" started-at="2019-01-10T03:19:25Z" data-provider="invalidLattitude" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_placed_with_incorrect_locations_of_stops -->
        <test-method status="PASS" signature="test_05_verify_order_not_placed_with_incorrect_locations_of_stops(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_05_verify_order_not_placed_with_incorrect_locations_of_stops" duration-ms="19" started-at="2019-01-10T03:19:25Z" data-provider="invalidLattitude" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_placed_with_incorrect_locations_of_stops -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="18" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="17" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="16" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="17" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="18" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="49" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="18" started-at="2019-01-10T03:19:25Z" data-provider="invalidEndPoint" finished-at="2019-01-10T03:19:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_07_verify_order_not_placed_in_past_time()[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_07_verify_order_not_placed_in_past_time" duration-ms="16" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_07_verify_order_not_placed_in_past_time -->
        <test-method status="PASS" signature="test_08_verify_order_not_placed_with_identical_two_stops()[pri:0, instance:com.rest.api.PlaceOrderApi@3dfc5fb8]" name="test_08_verify_order_not_placed_with_identical_two_stops" duration-ms="18" started-at="2019-01-10T03:19:25Z" finished-at="2019-01-10T03:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_08_verify_order_not_placed_with_identical_two_stops -->
      </class> <!-- com.rest.api.PlaceOrderApi -->
      <class name="com.rest.api.TakeOrderPutApi">
        <test-method status="PASS" signature="test_01_verify_take_order_with_specific_order_id()[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_01_verify_take_order_with_specific_order_id" duration-ms="1" started-at="2019-01-10T03:19:26Z" finished-at="2019-01-10T03:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_take_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="23" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="13" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="16" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="16" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="14" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="13" started-at="2019-01-10T03:19:26Z" data-provider="invalidIds" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="13" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="13" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="13" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="13" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="17" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="15" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="12" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="14" started-at="2019-01-10T03:19:26Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-10T03:19:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/taken]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_04_verify_order_not_taken_without_placing_it()[pri:0, instance:com.rest.api.TakeOrderPutApi@2173f6d9]" name="test_04_verify_order_not_taken_without_placing_it" duration-ms="14" started-at="2019-01-10T03:19:26Z" finished-at="2019-01-10T03:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_taken_without_placing_it -->
      </class> <!-- com.rest.api.TakeOrderPutApi -->
    </test> <!-- Regression-Suite -->
  </suite> <!-- Rest-API-Testing -->
</testng-results>
