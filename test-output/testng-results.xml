<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="6" ignored="0" total="87" passed="81">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="67484" started-at="2019-01-08T07:29:17Z" finished-at="2019-01-08T07:30:24Z">
    <groups>
    </groups>
    <test name="all-tests" duration-ms="67484" started-at="2019-01-08T07:29:17Z" finished-at="2019-01-08T07:30:24Z">
      <class name="com.rest.api.postApi">
        <test-method status="PASS" signature="test_01_verify_placing_an_order()[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_01_verify_placing_an_order" duration-ms="675" started-at="2019-01-08T07:29:31Z" finished-at="2019-01-08T07:29:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_placing_an_order -->
        <test-method status="PASS" signature="test_02_verify_placing_an_order_at_specific_time()[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_02_verify_placing_an_order_at_specific_time" duration-ms="678" started-at="2019-01-08T07:29:32Z" finished-at="2019-01-08T07:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_placing_an_order_at_specific_time -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="375" started-at="2019-01-08T07:29:33Z" data-provider="invalidTimeFormats" finished-at="2019-01-08T07:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="372" started-at="2019-01-08T07:29:33Z" data-provider="invalidTimeFormats" finished-at="2019-01-08T07:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="386" started-at="2019-01-08T07:29:33Z" data-provider="invalidTimeFormats" finished-at="2019-01-08T07:29:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="367" started-at="2019-01-08T07:29:34Z" data-provider="invalidTimeFormats" finished-at="2019-01-08T07:29:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="367" started-at="2019-01-08T07:29:34Z" data-provider="invalidTimeFormats" finished-at="2019-01-08T07:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="PASS" signature="test_03_verify_order_not_placed_with_invalid_time_format(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_03_verify_order_not_placed_with_invalid_time_format" duration-ms="363" started-at="2019-01-08T07:29:35Z" data-provider="invalidTimeFormats" finished-at="2019-01-08T07:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_placed_with_invalid_time_format -->
        <test-method status="FAIL" signature="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop" duration-ms="466" started-at="2019-01-08T07:29:35Z" data-provider="invalidLattitude" finished-at="2019-01-08T07:29:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <400>
     but: was <503>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <503>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.rest.api.postApi.test_04_verify_order_not_placed_with_incorrect_location_of_one_stop(postApi.java:168)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_placed_with_incorrect_location_of_one_stop -->
        <test-method status="FAIL" signature="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_04_verify_order_not_placed_with_incorrect_location_of_one_stop" duration-ms="823" started-at="2019-01-08T07:29:35Z" data-provider="invalidLattitude" finished-at="2019-01-08T07:29:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <400>
     but: was <503>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <503>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.rest.api.postApi.test_04_verify_order_not_placed_with_incorrect_location_of_one_stop(postApi.java:168)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_placed_with_incorrect_location_of_one_stop -->
        <test-method status="FAIL" signature="test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops" duration-ms="228" started-at="2019-01-08T07:29:36Z" data-provider="invalidLattitude" finished-at="2019-01-08T07:29:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <400>
     but: was <503>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <503>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.rest.api.postApi.test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops(postApi.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops -->
        <test-method status="FAIL" signature="test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops" duration-ms="241" started-at="2019-01-08T07:29:36Z" data-provider="invalidLattitude" finished-at="2019-01-08T07:29:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <400>
     but: was <503>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <503>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.rest.api.postApi.test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops(postApi.java:201)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_placed_with_incorrect_locations_of_all_stops -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="374" started-at="2019-01-08T07:29:37Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="371" started-at="2019-01-08T07:29:37Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="373" started-at="2019-01-08T07:29:37Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="415" started-at="2019-01-08T07:29:38Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="392" started-at="2019-01-08T07:29:38Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="365" started-at="2019-01-08T07:29:39Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_placed_with_incorrect_end_point(java.lang.String)[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_06_verify_order_not_placed_with_incorrect_end_point" duration-ms="369" started-at="2019-01-08T07:29:39Z" data-provider="invalidEndPoint" finished-at="2019-01-08T07:29:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_placed_with_incorrect_end_point -->
        <test-method status="PASS" signature="test_07_verify_order_not_placed_in_past_time()[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_07_verify_order_not_placed_in_past_time" duration-ms="345" started-at="2019-01-08T07:29:39Z" finished-at="2019-01-08T07:29:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_07_verify_order_not_placed_in_past_time -->
        <test-method status="FAIL" signature="test_08_verify_order_not_placed_with_identical_two_stops()[pri:0, instance:com.rest.api.postApi@6536e911]" name="test_08_verify_order_not_placed_with_identical_two_stops" duration-ms="504" started-at="2019-01-08T07:29:40Z" finished-at="2019-01-08T07:29:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <400>
     but: was <201>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <201>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.rest.api.postApi.test_08_verify_order_not_placed_with_identical_two_stops(postApi.java:297)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_08_verify_order_not_placed_with_identical_two_stops -->
      </class> <!-- com.rest.api.postApi -->
      <class name="com.rest.api.putApiTakeOrder">
        <test-method status="PASS" signature="test_01_verify_take_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_01_verify_take_order_with_specific_order_id" duration-ms="724" started-at="2019-01-08T07:30:12Z" finished-at="2019-01-08T07:30:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_take_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="569" started-at="2019-01-08T07:30:13Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="581" started-at="2019-01-08T07:30:13Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="580" started-at="2019-01-08T07:30:14Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="605" started-at="2019-01-08T07:30:14Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="661" started-at="2019-01-08T07:30:15Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_taken_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_02_verify_order_not_taken_with_invalid_order_id" duration-ms="682" started-at="2019-01-08T07:30:16Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_taken_with_invalid_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="601" started-at="2019-01-08T07:30:16Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="692" started-at="2019-01-08T07:30:17Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="673" started-at="2019-01-08T07:30:18Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="612" started-at="2019-01-08T07:30:18Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="3584" started-at="2019-01-08T07:30:19Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="589" started-at="2019-01-08T07:30:22Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="615" started-at="2019-01-08T07:30:23Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1/take]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_taken_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_03_verify_order_not_taken_with_invalid_end_point" duration-ms="689" started-at="2019-01-08T07:30:24Z" data-provider="invalidTakeEndPoint" finished-at="2019-01-08T07:30:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/taken]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_taken_with_invalid_end_point -->
        <test-method status="PASS" signature="test_04_verify_order_not_taken_without_placing_it()[pri:0, instance:com.rest.api.putApiTakeOrder@3e9b1010]" name="test_04_verify_order_not_taken_without_placing_it" duration-ms="31" started-at="2019-01-08T07:30:24Z" finished-at="2019-01-08T07:30:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_taken_without_placing_it -->
      </class> <!-- com.rest.api.putApiTakeOrder -->
      <class name="com.rest.api.getApi">
        <test-method status="PASS" signature="test_01_verify_retrieve_valid_order_with_id()[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_01_verify_retrieve_valid_order_with_id" duration-ms="2965" started-at="2019-01-08T07:29:17Z" finished-at="2019-01-08T07:29:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_retrieve_valid_order_with_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="3729" started-at="2019-01-08T07:29:20Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="678" started-at="2019-01-08T07:29:24Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="715" started-at="2019-01-08T07:29:24Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="684" started-at="2019-01-08T07:29:25Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="702" started-at="2019-01-08T07:29:26Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_retrieved_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_02_verify_order_not_retrieved_with_invalid_order_id" duration-ms="591" started-at="2019-01-08T07:29:26Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_retrieved_with_invalid_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="575" started-at="2019-01-08T07:29:27Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="669" started-at="2019-01-08T07:29:27Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="613" started-at="2019-01-08T07:29:28Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="560" started-at="2019-01-08T07:29:29Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="573" started-at="2019-01-08T07:29:29Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="609" started-at="2019-01-08T07:29:30Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_retrieved_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.getApi@5f9d02cb]" name="test_03_verify_order_not_retrieved_with_invalid_end_point" duration-ms="796" started-at="2019-01-08T07:29:31Z" data-provider="invalidFetchEndPoint" finished-at="2019-01-08T07:29:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_retrieved_with_invalid_end_point -->
      </class> <!-- com.rest.api.getApi -->
      <class name="com.rest.api.putApiCancelOrder">
        <test-method status="PASS" signature="test_01_verify_cancel_an_assigned_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_01_verify_cancel_an_assigned_order_with_specific_order_id" duration-ms="723" started-at="2019-01-08T07:29:40Z" finished-at="2019-01-08T07:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_cancel_an_assigned_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_02_verify_cancel_an_ongoing_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_02_verify_cancel_an_ongoing_order_with_specific_order_id" duration-ms="759" started-at="2019-01-08T07:29:41Z" finished-at="2019-01-08T07:29:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_cancel_an_ongoing_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_cancelled_for_an_already_completed_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_03_verify_order_not_cancelled_for_an_already_completed_order_with_specific_order_id" duration-ms="692" started-at="2019-01-08T07:29:42Z" finished-at="2019-01-08T07:29:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_cancelled_for_an_already_completed_order_with_specific_order_id -->
        <test-method status="FAIL" signature="test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id" duration-ms="1261" started-at="2019-01-08T07:29:42Z" finished-at="2019-01-08T07:29:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[
Expected: is <400>
     but: was <200>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
Expected: is <400>
     but: was <200>
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)
at com.rest.api.putApiCancelOrder.test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id(putApiCancelOrder.java:268)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_cancelled_an_already_cancelled_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="948" started-at="2019-01-08T07:29:44Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="695" started-at="2019-01-08T07:29:45Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="640" started-at="2019-01-08T07:29:45Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="728" started-at="2019-01-08T07:29:46Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="671" started-at="2019-01-08T07:29:47Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_05_verify_order_not_cancelled_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_05_verify_order_not_cancelled_with_invalid_order_id" duration-ms="629" started-at="2019-01-08T07:29:47Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_cancelled_with_invalid_order_id -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="666" started-at="2019-01-08T07:29:48Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="694" started-at="2019-01-08T07:29:49Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="614" started-at="2019-01-08T07:29:49Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="3579" started-at="2019-01-08T07:29:50Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="579" started-at="2019-01-08T07:29:54Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="608" started-at="2019-01-08T07:29:54Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="684" started-at="2019-01-08T07:29:55Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1/cancel]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_06_verify_order_not_cancelled_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_06_verify_order_not_cancelled_with_invalid_end_point" duration-ms="898" started-at="2019-01-08T07:29:55Z" data-provider="invalidCancelEndPoint" finished-at="2019-01-08T07:29:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/cancelled]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_06_verify_order_not_cancelled_with_invalid_end_point -->
        <test-method status="PASS" signature="test_07_verify_order_not_cancelled_without_placing_it()[pri:0, instance:com.rest.api.putApiCancelOrder@520a3426]" name="test_07_verify_order_not_cancelled_without_placing_it" duration-ms="22" started-at="2019-01-08T07:29:56Z" finished-at="2019-01-08T07:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_07_verify_order_not_cancelled_without_placing_it -->
      </class> <!-- com.rest.api.putApiCancelOrder -->
      <class name="com.rest.api.putApiCompleteOrder">
        <test-method status="PASS" signature="test_01_verify_complete_an_ongoing_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_01_verify_complete_an_ongoing_order_with_specific_order_id" duration-ms="850" started-at="2019-01-08T07:29:56Z" finished-at="2019-01-08T07:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_01_verify_complete_an_ongoing_order_with_specific_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="791" started-at="2019-01-08T07:29:57Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="795" started-at="2019-01-08T07:29:58Z" data-provider="invalidIds" finished-at="2019-01-08T07:29:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SampleString]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="1053" started-at="2019-01-08T07:29:59Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="692" started-at="2019-01-08T07:30:00Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10-09-1984]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="686" started-at="2019-01-08T07:30:00Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[12.34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_02_verify_order_not_completed_with_invalid_order_id(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_02_verify_order_not_completed_with_invalid_order_id" duration-ms="3948" started-at="2019-01-08T07:30:01Z" data-provider="invalidIds" finished-at="2019-01-08T07:30:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Select * from orders;]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_02_verify_order_not_completed_with_invalid_order_id -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="716" started-at="2019-01-08T07:30:05Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="783" started-at="2019-01-08T07:30:06Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.000000000034/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="718" started-at="2019-01-08T07:30:07Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234567890/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="691" started-at="2019-01-08T07:30:07Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[String/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="729" started-at="2019-01-08T07:30:08Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^&*()/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="924" started-at="2019-01-08T07:30:09Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[select* from orders/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="663" started-at="2019-01-08T07:30:10Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1234.9089/orders/1/complete]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_03_verify_order_not_completed_with_invalid_end_point(java.lang.String)[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_03_verify_order_not_completed_with_invalid_end_point" duration-ms="594" started-at="2019-01-08T07:30:10Z" data-provider="invalidCompleteEndPoint" finished-at="2019-01-08T07:30:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[v1/order/1/completed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_03_verify_order_not_completed_with_invalid_end_point -->
        <test-method status="PASS" signature="test_04_verify_order_not_completed_without_placing_it()[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_04_verify_order_not_completed_without_placing_it" duration-ms="18" started-at="2019-01-08T07:30:11Z" finished-at="2019-01-08T07:30:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_04_verify_order_not_completed_without_placing_it -->
        <test-method status="PASS" signature="test_05_verify_order_not_completed_for_an_already_completed_order_with_specific_order_id()[pri:0, instance:com.rest.api.putApiCompleteOrder@18eed359]" name="test_05_verify_order_not_completed_for_an_already_completed_order_with_specific_order_id" duration-ms="839" started-at="2019-01-08T07:30:11Z" finished-at="2019-01-08T07:30:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_05_verify_order_not_completed_for_an_already_completed_order_with_specific_order_id -->
      </class> <!-- com.rest.api.putApiCompleteOrder -->
    </test> <!-- all-tests -->
  </suite> <!-- Suite1 -->
</testng-results>
